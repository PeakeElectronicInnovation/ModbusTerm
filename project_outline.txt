A Windows app for Modbus testing, with the following features:

1. TCP and RTU Modbus support
   - TCP client with configurable IP address and port (default: 127.0.0.1:502)
   - RTU serial with configurable COM port, baud rate, parity, data bits, and stop bits. Both standard and custom baud rates configurable.
   - Connection status indicator in the UI

2. Master or Slave mode
   - Mode selection in the connection parameters
   - Appropriate UI controls based on selected mode
   - Ability to switch modes by disconnecting and reconnecting

3. User defined connection parameters, including custom baud rates
   - TCP parameters: IP address, port
   - RTU parameters: COM port, baud rate (standard and custom), parity, data bits, stop bits
   - Save/load connection profiles

4. Modbus request builder for master mode (FC, Slave ID, Register pointer, Quantity etc)
   - Support for function codes:
     - FC01: Read Coils
     - FC02: Read Discrete Inputs
     - FC03: Read Holding Registers
     - FC04: Read Input Registers
     - FC05: Write Single Coil
     - FC06: Write Single Register
     - FC15: Write Multiple Coils
     - FC16: Write Multiple Registers
   - User-defined slave ID, start address, and quantity
   - Send button to execute the request

5. Modbus response parser - display entire received message in hex and parsed values
   - Raw message display in hexadecimal
   - Parsed message with protocol details
   - Error detection and user-friendly error messages
   - Data type conversion options:
     - Boolean (coils/inputs)
     - Unsigned 16-bit integers
     - Signed 16-bit integers
     - Unsigned 32-bit integers (register pairs)
     - Signed 32-bit integers (register pairs)
     - Float32 (register pairs)
     - Float64 (register quads)
     - Hexadecimal and binary display options

6. Holding registers definition for slave mode, with the ability to set values
   - Table view of registers with address, value, name, and description
   - Ability to add, edit, and remove register definitions
   - Support for different data types
   - Import/export register definitions

7. Event view showing all traffic sent and received in HEX values and timestamped
   - Chronological log of all Modbus communications
   - Timestamp for each event
   - Message type (sent/received/error)
   - Raw message in hexadecimal
   - Clear log option
   - Export log to file

The app should be written in C#, using a clean modern interface, with a focus on ease of use and ease of development. It should be easy to add new features and support for new protocols.