<Window x:Class="ModbusTerm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ModbusTerm"
        xmlns:converters="clr-namespace:ModbusTerm.Converters"
        xmlns:helpers="clr-namespace:ModbusTerm.Helpers"
        xmlns:viewmodels="clr-namespace:ModbusTerm.ViewModels"
        mc:Ignorable="d"
        Title="ModbusTerm - Modbus Testing Tool" Background="#F0F0F0"
        Width="900" Height="950" MinWidth="800" MinHeight="800"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <!-- Converters -->
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:DataBitsConverter x:Key="DataBitsConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:ParityConverter x:Key="ParityConverter" />
        <converters:StopBitsConverter x:Key="StopBitsConverter" />
        <helpers:ModbusDataTypeConverter x:Key="ModbusDataTypeConverter"/>
        
        <!-- Common Button Style -->
        <Style x:Key="StandardButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Background" Value="#2196F3" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1976D2" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#0D47A1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#BDBDBD" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- GroupBox Header Style -->
        <Style x:Key="GroupBoxHeaderStyle" TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontWeight="Bold" Foreground="#2196F3" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- DataGrid Style -->
        <Style x:Key="ModernDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="AlternatingRowBackground" Value="#F5F5F5" />
            <Setter Property="HorizontalGridLinesBrush" Value="#EEEEEE" />
            <Setter Property="VerticalGridLinesBrush" Value="#EEEEEE" />
        </Style>
    </Window.Resources>
    
    <!-- Main Window Grid -->    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Connection Panel -->
            <RowDefinition Height="2*"/> <!-- Main Content -->
            <RowDefinition Height="1*" MinHeight="150" MaxHeight="300"/> <!-- Event Log with min/max heights -->
        </Grid.RowDefinitions>
        
        <!-- Connection Panel -->
        <GroupBox Grid.Row="0" Header="Connection" Margin="5" Padding="5" Style="{StaticResource GroupBoxHeaderStyle}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                
                <!-- Connection Type -->
                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="0,5,10,5">
                    <TextBlock Text="Type:" VerticalAlignment="Center" Margin="0,0,10,0" />
                    <RadioButton Content="TCP" IsChecked="True" Margin="0,0,10,0" 
                                 Checked="RadioButton_Checked" Tag="TCP" />
                    <RadioButton Content="RTU" Margin="0,0,10,0" 
                                 Checked="RadioButton_Checked" Tag="RTU" />
                </StackPanel>
                
                <!-- Mode Selection -->
                <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" Margin="10,5,0,5">
                    <TextBlock Text="Mode:" VerticalAlignment="Center" Margin="0,0,10,0" />
                    <RadioButton Content="Master" IsChecked="{Binding IsMasterMode, Mode=TwoWay}" Margin="0,0,10,0" 
                                 Checked="ModeRadioButton_Checked" Tag="Master" />
                    <RadioButton Content="Slave" IsChecked="{Binding IsMasterMode, Mode=TwoWay, Converter={StaticResource InverseBooleanConverter}}" Margin="0,0,10,0" 
                                 Checked="ModeRadioButton_Checked" Tag="Slave" />
                </StackPanel>
                
                <!-- TCP Parameters (shown when TCP is selected) -->
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,5,0,5"
                      x:Name="TcpParametersPanel" Visibility="Visible">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Grid.Column="0" Text="IP Address:" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <TextBox Grid.Column="1" Text="{Binding ConnectionParameters.IpAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             Margin="0,0,10,0" />
                    
                    <TextBlock Grid.Column="2" Text="Port:" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <TextBox Grid.Column="3" Text="{Binding ConnectionParameters.Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             Margin="0,0,0,0" />
                </Grid>
                
                <!-- RTU Parameters (hidden by default) -->
                <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,5,0,5"
                      x:Name="RtuParametersPanel" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <!-- First row of RTU parameters -->
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="COM Port:" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <ComboBox Grid.Row="0" Grid.Column="1" Margin="0,0,10,0"
                              ItemsSource="{Binding ComPorts}"
                              SelectedItem="{Binding ConnectionParameters.ComPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Baud Rate:" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <ComboBox Grid.Row="0" Grid.Column="3" Margin="0,0,0,0"
                              ItemsSource="{Binding StandardBaudRates}"
                              SelectedItem="{Binding ConnectionParameters.BaudRate, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    
                    <!-- Second row of RTU parameters -->
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Parity:" VerticalAlignment="Center" Margin="0,5,5,0" />
                    <ComboBox Grid.Row="1" Grid.Column="1" Margin="0,5,10,0"
                              SelectedIndex="{Binding ConnectionParameters.Parity, Mode=TwoWay, Converter={StaticResource ParityConverter}}">
                        <ComboBoxItem>None</ComboBoxItem>
                        <ComboBoxItem>Even</ComboBoxItem>
                        <ComboBoxItem>Odd</ComboBoxItem>
                        <ComboBoxItem>Mark</ComboBoxItem>
                        <ComboBoxItem>Space</ComboBoxItem>
                    </ComboBox>
                    
                    <TextBlock Grid.Row="1" Grid.Column="2" Text="Data/Stop:" VerticalAlignment="Center" Margin="0,5,5,0" />
                    <StackPanel Grid.Row="1" Grid.Column="3" Orientation="Horizontal" Margin="0,5,0,0">
                        <ComboBox Width="80" Margin="0,0,5,0"
                                  SelectedIndex="{Binding ConnectionParameters.DataBits, Mode=TwoWay, Converter={StaticResource DataBitsConverter}}">
                            <ComboBoxItem>7</ComboBoxItem>
                            <ComboBoxItem>8</ComboBoxItem>
                        </ComboBox>
                        <ComboBox Width="80"
                                  SelectedIndex="{Binding ConnectionParameters.StopBits, Mode=TwoWay, Converter={StaticResource StopBitsConverter}}">
                            <ComboBoxItem>1</ComboBoxItem>
                            <ComboBoxItem>1.5</ComboBoxItem>
                            <ComboBoxItem>2</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </Grid>
                
                <!-- Connect/Disconnect buttons and profile controls -->
                <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,5,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    
                    <!-- Profile controls -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <TextBlock Text="Profile:" VerticalAlignment="Center" Margin="0,0,5,0" />
                        <ComboBox Width="150" Margin="0,0,10,0" 
                                  ItemsSource="{Binding ConnectionProfiles}" 
                                  SelectedItem="{Binding SelectedProfile, Mode=TwoWay}" />
                        <Button Content="Save" Width="60" Margin="0,0,5,0"
                                Command="{Binding SaveConnectionCommand}" Style="{StaticResource StandardButtonStyle}" />
                        <Button Content="Load" Width="60"
                                Command="{Binding LoadConnectionCommand}" 
                                IsEnabled="{Binding HasSelectedProfile}" Style="{StaticResource StandardButtonStyle}" />
                    </StackPanel>
                    
                    <!-- Connect/Disconnect buttons -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Connect" Command="{Binding ConnectCommand}" Width="80" Margin="0,0,10,0" Style="{StaticResource StandardButtonStyle}" />
                        <Button Content="Disconnect" Command="{Binding DisconnectCommand}" Width="80" Style="{StaticResource StandardButtonStyle}" />
                    </StackPanel>
                </Grid>
            </Grid>
        </GroupBox>
        
        <!-- Main Content Area -->
        <TabControl Grid.Row="1" Margin="5" Background="White" BorderBrush="#BDBDBD">
            <!-- Master Mode Tab (visible when in master mode) -->
            <TabItem Header="Master Mode" IsSelected="{Binding IsMasterMode, Mode=OneWay}" Visibility="{Binding IsMasterMode, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MaxHeight="200" />
                        <RowDefinition Height="*" MinHeight="250" />
                    </Grid.RowDefinitions>
                    
                    <!-- Request Builder -->
                    <GroupBox Grid.Row="0" Header="Request Builder" Margin="5,5,5,10" Padding="8" Style="{StaticResource GroupBoxHeaderStyle}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="300" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="150" />
                            </Grid.ColumnDefinitions>
                            
                            <!-- Function Code Selection -->
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Function:" VerticalAlignment="Center" Margin="5,5,10,5" />
                            <ComboBox Grid.Row="0" Grid.Column="1" Margin="0,5,15,5" Name="FunctionCodeComboBox"
                                      SelectionChanged="FunctionCodeComboBox_SelectionChanged">
                                <ComboBoxItem Content="Read Coils" Tag="1" />
                                <ComboBoxItem Content="Read Discrete Inputs" Tag="2" />
                                <ComboBoxItem Content="Read Holding Registers" Tag="3" IsSelected="True" />
                                <ComboBoxItem Content="Read Input Registers" Tag="4" />
                                <ComboBoxItem Content="Write Single Coil" Tag="5" />
                                <ComboBoxItem Content="Write Single Register" Tag="6" />
                                <ComboBoxItem Content="Write Multiple Coils" Tag="15" />
                                <ComboBoxItem Content="Write Multiple Registers" Tag="16" />
                            </ComboBox>
                            
                            <TextBlock Grid.Row="0" Grid.Column="2" Text="Slave ID:" VerticalAlignment="Center" Margin="5,5,10,5" />
                            <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding CurrentRequest.SlaveId, Mode=TwoWay}" 
                                     Margin="0,5,15,5" />
                            
                            <TextBlock Grid.Row="0" Grid.Column="4" Text="Start Address:" VerticalAlignment="Center" Margin="5,5,10,5" />
                            <TextBox Grid.Row="0" Grid.Column="5" Text="{Binding CurrentRequest.StartAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     Margin="0,5,5,5" />
                            
                            <!-- Quantity (only visible for read functions) -->
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Quantity:" VerticalAlignment="Center" Margin="5,12,10,5" 
                                       Visibility="{Binding IsWriteFunction, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding CurrentRequest.Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     Margin="0,12,15,5" Visibility="{Binding IsWriteFunction, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />

                            <!-- Dynamic write data inputs -->
                            <ItemsControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6" 
                                      x:Name="WriteDataItemsControl"
                                      ItemsSource="{Binding WriteDataInputs}" 
                                      Margin="5,12,5,5" 
                                      Visibility="{Binding IsWriteFunction, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Margin="0,0,8,5" Padding="4" BorderThickness="1" BorderBrush="#CCCCCC" CornerRadius="3" Background="#FAFAFA">
                                            <Grid>
                                                <!-- Coil Write (Boolean) Template -->
                                                <Grid Visibility="{Binding IsCoilWrite, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    
                                                    <ToggleButton Grid.Column="0" x:Name="CoilToggle"
                                                                IsChecked="{Binding BooleanValue, Mode=TwoWay}"
                                                                Width="50" Height="26" Margin="0,0,4,0"
                                                                ToolTip="Toggle coil value (True/False)">
                                                        <ToggleButton.Content>
                                                            <TextBlock Text="{Binding BooleanValue}" FontWeight="Bold" FontSize="10" />
                                                        </ToggleButton.Content>
                                                    
                                                        <ToggleButton.Style>
                                                            <Style TargetType="ToggleButton">
                                                                <Setter Property="Background" Value="#F44336" />
                                                                <Setter Property="Foreground" Value="White" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="ToggleButton">
                                                                            <Border Background="{TemplateBinding Background}" 
                                                                                    CornerRadius="13" 
                                                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                                                <ContentPresenter HorizontalAlignment="Center" 
                                                                                                VerticalAlignment="Center" 
                                                                                                Content="{TemplateBinding Content}"
                                                                                                TextElement.FontWeight="Bold"
                                                                                                TextElement.FontSize="10" />
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                    <Setter Property="Background" Value="#4CAF50" />
                                                                                </Trigger>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Opacity" Value="0.8" />
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ToggleButton.Style>
                                                    </ToggleButton>
                                                    
                                                    <Button Grid.Column="1"
                                                            Command="{Binding DataContext.RemoveWriteDataItemCommand, ElementName=WriteDataItemsControl}"
                                                            CommandParameter="{Binding}"
                                                            Content="✕" Width="20" Height="20" Margin="0,3,0,3"
                                                            ToolTip="Remove this coil"
                                                            Visibility="{Binding DataContext.IsMultipleWriteFunction, ElementName=WriteDataItemsControl, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                            Style="{StaticResource StandardButtonStyle}" 
                                                            Background="#F44336" FontSize="10" />
                                                </Grid>
                                                
                                                <!-- Register Write Template -->
                                                <Grid Visibility="{Binding IsCoilWrite, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="80" />
                                                        <ColumnDefinition Width="60" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    
                                                    <TextBox Grid.Column="0" 
                                                             Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                             Height="24" Margin="0,0,4,0"
                                                             ToolTip="Enter register value" />
                                                    
                                                    <ComboBox Grid.Column="1"
                                                              ItemsSource="{Binding AvailableDataTypes}"
                                                              SelectedItem="{Binding SelectedDataType, Mode=TwoWay}"
                                                              Height="24" Margin="0,0,4,0"
                                                              ToolTip="Select data type">
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding Converter={StaticResource ModbusDataTypeConverter}}" FontSize="10" />
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                    </ComboBox>
                                                    
                                                    <Button Grid.Column="2"
                                                            Command="{Binding DataContext.RemoveWriteDataItemCommand, ElementName=WriteDataItemsControl}"
                                                            CommandParameter="{Binding}"
                                                            Content="✕" Width="20" Height="20" Margin="0,2,0,2"
                                                            ToolTip="Remove this register"
                                                            Visibility="{Binding DataContext.IsMultipleWriteFunction, ElementName=WriteDataItemsControl, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                            Style="{StaticResource StandardButtonStyle}" 
                                                            Background="#F44336" FontSize="10" />
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            
                            <!-- Add Value Button -->
                            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="6" Orientation="Horizontal"
                                       Visibility="{Binding IsWriteFunction, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Margin="5,5,0,5">
                                <Button Padding="5,2" 
                                        Command="{Binding AddWriteDataItemCommand}" 
                                        Content="Add Value" 
                                        Visibility="{Binding IsMultipleWriteFunction, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <Button Margin="15,0,0,0" Padding="8,4" Command="{Binding SendRequestCommand}"
                                        Content="Send" Style="{StaticResource StandardButtonStyle}" />
                            </StackPanel>
                            
                            <!-- Data Type for Read Functions -->
                            <StackPanel Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="4" Orientation="Horizontal" Margin="5,12,10,5"
                                        Visibility="{Binding IsWriteFunction, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                <TextBlock Text="Data Type:" VerticalAlignment="Center" Margin="0,0,10,0" />
                                <ComboBox Width="180" SelectedIndex="{Binding SelectedDataType, Mode=TwoWay}" ItemsSource="{Binding AvailableDataTypes}" x:Name="DataTypeComboBox">
                                    <!-- Display friendly names using the ModbusDataTypeConverter -->
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource ModbusDataTypeConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Button Margin="15,0,10,0" Padding="8,4" Command="{Binding SendRequestCommand}"
                                        Content="Send" Style="{StaticResource StandardButtonStyle}" />
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    
                    <!-- Response Display -->
                    <GroupBox Grid.Row="1" Header="Response" Margin="5" Padding="8" Style="{StaticResource GroupBoxHeaderStyle}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            
                            <!-- Response metadata -->
                            <StackPanel Grid.Row="0" Orientation="Vertical" Margin="5,5,5,15">
                                <TextBlock Margin="0,0,0,8">
                                    <Run Text="Response Status: " FontWeight="Bold"/>
                                    <Run Text="{Binding ResponseStatus, Mode=OneWay}"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,5">
                                    <Run Text="Response Time: " FontWeight="Bold"/>
                                    <Run Text="{Binding ResponseTime, Mode=OneWay}"/>
                                </TextBlock>
                            </StackPanel>
                            
                            <!-- Response data -->
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                
                                <!-- Use DockPanel to ensure items don't overlap -->
                                <DockPanel LastChildFill="True">
                                    <!-- Use a ContentControl to ensure only one item is displayed at a time -->
                                    <ContentControl>
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HasLastResponse}" Value="True">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <!-- Response DataGrid -->
                                                                <DataGrid AutoGenerateColumns="False" IsReadOnly="True" 
                                                                          ItemsSource="{Binding ResponseItems}"
                                                                          Style="{StaticResource ModernDataGridStyle}"
                                                                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                                    <DataGrid.Columns>
                                                                        <DataGridTextColumn Header="Address" Width="100" Binding="{Binding Address}" />
                                                                        <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value}" />
                                                                        <DataGridTextColumn Header="Hex" Width="150" Binding="{Binding HexValue}" />
                                                                        <DataGridTextColumn Header="Binary" Width="200" Binding="{Binding BinaryValue}" />
                                                                    </DataGrid.Columns>
                                                                </DataGrid>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding HasLastResponse}" Value="False">
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <!-- No response message -->
                                                                <TextBlock Text="No response received." Margin="10,10,10,10"
                                                                           HorizontalAlignment="Left" VerticalAlignment="Top" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </DockPanel>
                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            
            <!-- Slave Mode Tab (visible when in slave mode) -->
            <TabItem Header="Slave Mode" IsSelected="{Binding IsSlaveMode, Mode=OneWay}" Visibility="{Binding IsSlaveMode, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                <Grid>
                    <!-- Register Table -->
                    <GroupBox Header="Holding Registers" Margin="5" Padding="5" Style="{StaticResource GroupBoxHeaderStyle}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            
                            <!-- Register Data Grid -->
                            <DataGrid Grid.Row="0" AutoGenerateColumns="False" IsReadOnly="False"
                                      Name="RegistersGrid"
                                      ItemsSource="{Binding RegisterDefinitions}"
                                      SelectedItem="{Binding SelectedRegister, Mode=TwoWay}"
                                      Style="{StaticResource ModernDataGridStyle}">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Address" Binding="{Binding Address}" Width="80" />
                                    <DataGridTextColumn Header="Value" Binding="{Binding FormattedValue}" Width="100" />
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="150" />
                                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="*" />
                                    <DataGridComboBoxColumn Header="Data Type" 
                                                          SelectedItemBinding="{Binding DataType}" 
                                                          Width="100">
                                        <DataGridComboBoxColumn.ElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="ItemsSource" Value="{Binding DataContext.DataTypes, RelativeSource={RelativeSource AncestorType=Window}}" />
                                            </Style>
                                        </DataGridComboBoxColumn.ElementStyle>
                                        <DataGridComboBoxColumn.EditingElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="ItemsSource" Value="{Binding DataContext.DataTypes, RelativeSource={RelativeSource AncestorType=Window}}" />
                                            </Style>
                                        </DataGridComboBoxColumn.EditingElementStyle>
                                    </DataGridComboBoxColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            
                            <!-- Register Actions -->
                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                                <Button Content="Add Register" Width="100" Margin="0,0,8,0"
                                        Command="{Binding AddRegisterCommand}" Style="{StaticResource StandardButtonStyle}" />
                                <Button Content="Edit Register" Width="100" Margin="0,0,8,0"
                                        Command="{Binding EditRegisterCommand}" 
                                        IsEnabled="{Binding HasSelectedRegister}" Style="{StaticResource StandardButtonStyle}" />
                                <Button Content="Remove Register" Width="115" Margin="0,0,8,0"
                                        Command="{Binding RemoveRegisterCommand}" 
                                        IsEnabled="{Binding HasSelectedRegister}" Style="{StaticResource StandardButtonStyle}" />
                                <Button Content="Import" Width="80" Margin="0,0,8,0"
                                        Command="{Binding ImportRegistersCommand}" Style="{StaticResource StandardButtonStyle}" />
                                <Button Content="Export" Width="80" 
                                        Command="{Binding ExportRegistersCommand}" 
                                        IsEnabled="{Binding HasRegisters}" Style="{StaticResource StandardButtonStyle}" />
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>
        
        <!-- Event Log -->
        <GroupBox Grid.Row="2" Header="Event Log" Margin="5" Padding="5" Style="{StaticResource GroupBoxHeaderStyle}">
            <DockPanel LastChildFill="True">
                <!-- Event log controls (docked at bottom) -->
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5,0,0">
                    <CheckBox Content="Auto-scroll" IsChecked="{Binding AutoScrollEventLog}" Margin="0,0,10,0" VerticalAlignment="Center" Name="AutoScrollCheckBox" />
                    <Button Content="Export" Width="80" Height="30" Command="{Binding ExportEventsCommand}" Margin="0,0,10,0" 
                            IsEnabled="{Binding HasEventLogs}" Style="{StaticResource StandardButtonStyle}" />
                    <Button Content="Clear Log" Width="80" Height="30" Command="{Binding ClearEventsCommand}" Style="{StaticResource StandardButtonStyle}" />
                </StackPanel>

                <!-- Event log data grid (fills remaining space) -->
                <DataGrid ItemsSource="{Binding CommunicationEvents}" 
                          Name="EventLogDataGrid"
                          AutoGenerateColumns="False" IsReadOnly="True"
                          LoadingRow="EventLogDataGrid_LoadingRow"
                          MaxHeight="250"
                          Style="{StaticResource ModernDataGridStyle}">
                    <DataGrid.Resources>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EventType}" Value="Error">
                                    <Setter Property="Background" Value="#FFDDDD" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding EventType}" Value="Warning">
                                    <Setter Property="Background" Value="#FFFFDD" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Direction}" Value="Send">
                                    <Setter Property="Background" Value="#E6F2FF" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Direction}" Value="Receive">
                                    <Setter Property="Background" Value="#E6FFE6" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Time" Binding="{Binding Timestamp, StringFormat=HH:mm:ss.fff}" Width="100" />
                        <DataGridTextColumn Header="Type" Binding="{Binding EventType}" Width="100" />
                        <DataGridTextColumn Header="Direction" Binding="{Binding Direction}" Width="100" />
                        <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="*" />
                        <DataGridTextColumn Header="Raw Data" Binding="{Binding HexData}" Width="250" />
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>
    </Grid>
</Window>
